// === –£—Ç–∏–ª–∏—Ç—ã ===
const $ = (s, p=document) => p.querySelector(s);
const $$ = (s, p=document) => [...p.querySelectorAll(s)];
const ls = {
  get: (k, def) => { try { return JSON.parse(localStorage.getItem(k)) ?? def; } catch { return def; } },
  set: (k, v) => localStorage.setItem(k, JSON.stringify(v)),
  remove: (k) => localStorage.removeItem(k)
};
const fmtDate = (d) => {
  const dt = (d instanceof Date) ? d : new Date(d);
  const pad = n => String(n).padStart(2,'0');
  return `${pad(dt.getDate())}.${pad(dt.getMonth()+1)} ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;
};
const diffMins = (a,b) => Math.round((a - b)/60000);
const toast = (msg) => { const t=$("#toast"); t.textContent=msg; t.classList.add("show"); setTimeout(()=>t.classList.remove("show"),2200); };

// === –°–æ—Å—Ç–æ—è–Ω–∏–µ ===
let user = ls.get("ss_user", null);
let tasks = ls.get("ss_tasks", []);
let schedule = ls.get("ss_schedule", null);

const DAY_NAMES = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫","–í—Ç–æ—Ä–Ω–∏–∫","–°—Ä–µ–¥–∞","–ß–µ—Ç–≤–µ—Ä–≥","–ü—è—Ç–Ω–∏—Ü–∞","–°—É–±–±–æ—Ç–∞","–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"];

// === –ü—Ä–∏–º–µ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è ===
const defaultSchedule = [
  { name:"–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", lessons:[
    { time:"08:00", title:"–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑", room:"205", teacher:"–ø—Ä–æ—Ñ. –ò–≤–∞–Ω–æ–≤ –ò.–ò." },
    { time:"09:40", title:"–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", room:"312", teacher:"–¥–æ—Ü. –ö–∏–º –ê.–ù." },
    { time:"11:30", title:"–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫", room:"401", teacher:"–ø—Ä–µ–ø. –ë—Ä–∞—É–Ω –ï.–í." }
  ]},
  { name:"–í—Ç–æ—Ä–Ω–∏–∫", lessons:[
    { time:"08:00", title:"–§–∏–∑–∏–∫–∞", room:"208", teacher:"–¥–æ—Ü. –°–∏–¥–æ—Ä–æ–≤ –°.–°." },
    { time:"09:40", title:"–ê–ª–≥–æ—Ä–∏—Ç–º—ã", room:"105", teacher:"–∞—Å—Å. –ü–µ—Ç—Ä–æ–≤ –í.–ù." }
  ]},
  { name:"–°—Ä–µ–¥–∞", lessons:[
    { time:"09:40", title:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", room:"–û–Ω–ª–∞–π–Ω", teacher:"–ø—Ä–µ–ø. –î–∂–æ–Ω—Å–æ–Ω –ú.–ê." }
  ]}
];

// === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ / –≤—Ö–æ–¥ ===
const loginModal = $("#loginModal");
const greeting = $("#greeting");
const userNameInput = $("#userNameInput");
$("#saveUserBtn").addEventListener("click", ()=>{
  const val = userNameInput.value.trim();
  if(!val) return toast("–í–≤–µ–¥–∏—Ç–µ –∏–º—è");
  user = { name: val };
  ls.set("ss_user", user);
  greeting.textContent = `–ü—Ä–∏–≤–µ—Ç, ${user.name}!`;
  loginModal.classList.remove("show");
});
if(!user){ loginModal.classList.add("show"); } else { greeting.textContent = `–ü—Ä–∏–≤–µ—Ç, ${user.name}!`; }

// === –í–∫–ª–∞–¥–∫–∏ ===
$$(".tab").forEach(btn=>{
  btn.addEventListener("click", ()=>{
    $$(".tab").forEach(b=>b.classList.remove("active"));
    $$(".tab-panel").forEach(p=>p.classList.remove("active"));
    btn.classList.add("active");
    $("#"+btn.dataset.tab).classList.add("active");
    updateStats();
  });
});

// === –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ===
if(!schedule){ schedule = defaultSchedule; ls.set("ss_schedule", schedule); }
const weekGrid = $("#weekGrid");

const renderSchedule = ()=>{
  weekGrid.innerHTML = "";
  schedule.forEach((day, dayIdx)=>{
    const card = document.createElement("div");
    card.className = "day-card";
    const h = document.createElement("h3"); h.textContent = day.name; card.appendChild(h);
    day.lessons.forEach((l,i)=>{
      const row = document.createElement("div");
      row.className = "lesson";
      row.innerHTML = `
        <div class="info">
          <div class="time">${l.time}</div>
          <div class="title">${l.title} <span class="muted">(${l.room})</span></div>
          <div class="muted">${l.teacher || ""}</div>
        </div>
        <button class="remove">–£–¥–∞–ª–∏—Ç—å</button>
      `;
      row.querySelector(".remove").addEventListener("click", ()=>{
        schedule[dayIdx].lessons.splice(i,1);
        ls.set("ss_schedule", schedule);
        renderSchedule();
      });
      card.appendChild(row);
    });
    weekGrid.appendChild(card);
  });
};
renderSchedule();

// === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä—ã –≤—Ä—É—á–Ω—É—é ===
const lessonModal = $("#lessonModal");
$("#addLessonBtn").addEventListener("click", ()=>lessonModal.classList.add("show"));
$("#cancelLessonBtn").addEventListener("click", ()=>lessonModal.classList.remove("show"));
$("#saveLessonBtn").addEventListener("click", ()=>{
  const day = +$("#lessonDay").value;
  const time = $("#lessonTime").value || "08:00";
  const title = $("#lessonTitle").value.trim();
  if(!title) return toast("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, –∞—É–¥–∏—Ç–æ—Ä–∏—é –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è");
  while(schedule.length <= day){ schedule.push({ name:DAY_NAMES[schedule.length] || `–î–µ–Ω—å ${schedule.length+1}`, lessons:[] }); }
  if(!schedule[day]) schedule[day] = { name: DAY_NAMES[day], lessons: [] };
  schedule[day].lessons.push({ time, title, room:"", teacher:"" });
  ls.set("ss_schedule", schedule);
  $("#lessonTitle").value = "";
  lessonModal.classList.remove("show");
  renderSchedule();
  toast("–ü–∞—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞");
});

// === –ò–º–ø–æ—Ä—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–∑ Excel (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π) ===
$("#excelInput").addEventListener("change", async (e)=>{
  const file = e.target.files[0];
  if(!file) return;
  try {
    const data = await file.arrayBuffer();
    const workbook = XLSX.read(data);
    const sheet = workbook.Sheets[workbook.SheetNames[0]];
    const rows = XLSX.utils.sheet_to_json(sheet);

    const byDay = {};
    rows.forEach(r => {
      // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–ª—é—á–∏ (—É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã, –¥–µ–ª–∞–µ–º –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä)
      const norm = Object.fromEntries(
        Object.entries(r).map(([k, v]) => [k.trim().toLowerCase(), v])
      );

      // –∏—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
      const day = norm["–¥–µ–Ω—å"] || norm["–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏"] || norm["day"] || norm["weekday"];
      const time = norm["–≤—Ä–µ–º—è"] || norm["–≤—Ä–µ–º—è –ø–∞—Ä—ã"] || norm["–Ω–∞—á–∞–ª–æ"] || norm["time"];
      const title = norm["–ø—Ä–µ–¥–º–µ—Ç"] || norm["–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞"] || norm["–∫—É—Ä—Å"] || norm["–Ω–∞–∑–≤–∞–Ω–∏–µ"];
      const room = norm["–∞—É–¥–∏—Ç–æ—Ä–∏—è"] || norm["–∫–∞–±."] || norm["–∫–∞–±–∏–Ω–µ—Ç"] || norm["room"];
      const teacher = norm["–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"] || norm["–ª–µ–∫—Ç–æ—Ä"] || norm["—É—á–∏—Ç–µ–ª—å"] || norm["teacher"];

      if(!day || !title) return;
      if(!byDay[day]) byDay[day] = [];
      byDay[day].push({
        time: time || "‚Äî",
        title,
        room: room || "‚Äî",
        teacher: teacher || ""
      });
    });

    schedule = Object.keys(byDay).map(d => ({ name:d, lessons:byDay[d] }));
    ls.set("ss_schedule", schedule);
    renderSchedule();
    toast("üìò –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ Excel (–∞–≤—Ç–æ—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ)");
  } catch (err) {
    console.error(err);
    toast("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ Excel");
  }
});

// === –ó–∞–¥–∞—á–∏ ===
const taskForm = $("#taskForm");
const taskList = $("#taskList");

const sortTasks = (a,b)=>{
  const pr = {high:0,medium:1,low:2};
  if(a.done !== b.done) return a.done - b.done;
  const d = new Date(a.dueISO) - new Date(b.dueISO);
  if(d !== 0) return d;
  return pr[a.prio] - pr[b.prio];
};

const renderTasks = ()=>{
  tasks.sort(sortTasks);
  taskList.innerHTML = "";
  const now = new Date();
  tasks.forEach(t=>{
    const due = new Date(t.dueISO);
    const overdue = (due < now) && !t.done;
    const minsLeft = diffMins(due, now);
    const soon = minsLeft <= 60 && minsLeft >= 0 && !t.done;

    const item = document.createElement("div");
    item.className = `task ${t.done?'done':''} ${t.prio} ${overdue?'overdue':(soon?'due-soon':'')}`;
    item.innerHTML = `
      <input type="checkbox" ${t.done?'checked':''}>
      <div class="content">
        <div class="title">${t.text}</div>
        <div class="meta">
          <span class="tag prio-${t.prio}">${t.prio}</span>
          <span class="due">–¥–µ–¥–ª–∞–π–Ω: ${fmtDate(due)}</span>
        </div>
      </div>
      <div class="controls">
        <button class="del">üóëÔ∏è</button>
      </div>
    `;
    item.querySelector("input").addEventListener("change", e=>{
      t.done = e.target.checked; saveTasks(); renderTasks(); updateStats();
    });
    item.querySelector(".del").addEventListener("click", ()=>{
      tasks = tasks.filter(x=>x.id!==t.id);
      saveTasks(); renderTasks(); updateStats();
    });
    taskList.appendChild(item);
  });
};
const saveTasks = ()=>ls.set("ss_tasks", tasks);

taskForm.addEventListener("submit",(e)=>{
  e.preventDefault();
  const text = $("#taskText").value.trim();
  const due = $("#taskDue").value;
  const prio = $("#taskPrio").value;
  if(!text || !due) return toast("–ó–∞–ø–æ–ª–Ω–∏ –∑–∞–¥–∞—á—É –∏ –¥–µ–¥–ª–∞–π–Ω");
  const id = Date.now();
  tasks.push({ id, text, dueISO: due, prio, done:false });
  saveTasks();
  taskForm.reset();
  renderTasks(); updateStats();
  toast("–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞");
});

// === –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ===
const updateStats = ()=>{
  const total = tasks.length;
  const done = tasks.filter(t=>t.done).length;
  const rate = total ? Math.round(done/total*100) : 0;
  $("#kpiTotal").textContent = total;
  $("#kpiDone").textContent = done;
  $("#kpiRate").textContent = rate + "%";

  const open = tasks.filter(t=>!t.done).sort((a,b)=>new Date(a.dueISO)-new Date(b.dueISO));
  if(open.length){
    const next = open[0];
    $("#kpiNext").textContent = `${fmtDate(next.dueISO)} ‚Ä¢ ${next.text}`;
  } else $("#kpiNext").textContent = "‚Äî";

  const soon = open.filter(t => (new Date(t.dueISO)-new Date()) <= 48*60*60*1000);
  const hot = $("#hotList");
  hot.innerHTML = "";
  soon.forEach(t=>{
    const div = document.createElement("div");
    div.className = `task ${t.prio}`;
    div.innerHTML = `<div></div><div class="content"><div class="title">${t.text}</div><div class="meta"><span class="due">–¥–æ ${fmtDate(t.dueISO)}</span></div></div>`;
    hot.appendChild(div);
  });
};

// === –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ===
$("#requestNotifBtn").addEventListener("click", async ()=>{
  try {
    const perm = await Notification.requestPermission();
    toast(perm === "granted" ? "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã" : "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ");
  } catch { toast("–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"); }
});
setInterval(()=>{
  const now = new Date();
  tasks.forEach(t=>{
    if(t.done || t.notified) return;
    const due = new Date(t.dueISO);
    const mins = diffMins(due, now);
    if(mins <= 60 && mins >= 0){
      if(Notification.permission === "granted")
        new Notification("–°–∫–æ—Ä–æ –¥–µ–¥–ª–∞–π–Ω ‚è∞", { body: `${t.text} ‚Ä¢ ${fmtDate(due)}` });
      toast(`–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ${t.text}`);
      t.notified = true; saveTasks();
    }
  });
},60000);

// === Telegram demo ===
$("#tgConnectBtn").addEventListener("click", ()=>{
  const u = $("#tgUser").value.trim();
  if(!u.startsWith("@")) return toast("–í–≤–µ–¥–∏—Ç–µ @username");
  ls.set("ss_tg_user", { username:u });
  toast("Telegram –ø–æ–¥–∫–ª—é—á—ë–Ω (–¥–µ–º–æ)");
});
$("#tgTestBtn").addEventListener("click", ()=>{
  const data = ls.get("ss_tg_user", null);
  if(!data) return toast("–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏ Telegram");
  const bot="SmartScheduleDemoBot";
  window.open(`https://t.me/${bot}?start=test`, "_blank");
  toast(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${data.username}`);
});

$("#openAIChatBtn").addEventListener("click", () => {
  window.open("https://chat.openai.com/", "_blank");
});


// === –°–±—Ä–æ—Å ===
$("#clearAllBtn").addEventListener("click", ()=>{
  if(confirm("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ?")){
    ["ss_user","ss_tasks","ss_schedule","ss_tg_user"].forEach(ls.remove);
    location.reload();
  }
});

// === –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã ===
const root = document.documentElement;
const themeToggleBtn = $("#themeToggleBtn");

const applyTheme = (theme) => {
  root.setAttribute("data-theme", theme);
  ls.set("ss_theme", theme);
  themeToggleBtn.textContent = theme === "dark" ? "‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è" : "üåô –¢—ë–º–Ω–∞—è";
};

const savedTheme = ls.get("ss_theme", "dark");
applyTheme(savedTheme);

themeToggleBtn.addEventListener("click", () => {
  const newTheme = root.getAttribute("data-theme") === "dark" ? "light" : "dark";
  applyTheme(newTheme);
});



// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
const boot=()=>{renderSchedule();renderTasks();updateStats();};
boot();
